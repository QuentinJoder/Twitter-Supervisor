name: build-and-test

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9] # 3.6 and below don't support dataclasses

    environment: TEST

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
          SQLALCHEMY_TRACK_MODIFICATIONS: 'False'
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEFAULT_ACCESS_TOKEN: ${{ secrets.DEFAULT_ACCESS_TOKEN }}
          DEFAULT_ACCESS_TOKEN_SECRET: ${{ secrets.DEFAULT_ACCESS_TOKEN_SECRET }}
          APP_CONSUMER_KEY: ${{ secrets.APP_CONSUMER_KEY }}
          APP_CONSUMER_SECRET: ${{ secrets.APP_CONSUMER_SECRET }}
          DEFAULT_USER: ${{ secrets.DEFAULT_USER }}  
      run: |
        pytest tests/ --allow_api_call --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    
